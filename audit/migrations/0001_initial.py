# Generated by Django 5.2.1 on 2025-06-11 12:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('retention_days', models.PositiveIntegerField(default=365, verbose_name='Dias de Retenção')),
                ('enable_email_alerts', models.BooleanField(default=True)),
                ('alert_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('monitor_failed_logins', models.BooleanField(default=True)),
                ('max_failed_logins', models.PositiveIntegerField(default=5)),
                ('monitor_high_value_transactions', models.BooleanField(default=True)),
                ('high_value_threshold', models.DecimalField(decimal_places=2, default=10000, max_digits=15)),
                ('log_read_operations', models.BooleanField(default=False)),
                ('log_api_calls', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração de Auditoria',
                'verbose_name_plural': 'Configurações de Auditoria',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('CREATE', 'Criação'), ('UPDATE', 'Atualização'), ('DELETE', 'Exclusão'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('PASSWORD_CHANGE', 'Alteração de Senha'), ('PERMISSION_CHANGE', 'Alteração de Permissão'), ('DEPOSIT', 'Depósito'), ('WITHDRAWAL', 'Saque'), ('INVESTMENT', 'Investimento'), ('PAYMENT', 'Pagamento'), ('REFERRAL', 'Indicação'), ('NOTIFICATION', 'Notificação'), ('CONFIG_CHANGE', 'Alteração de Configuração'), ('SECURITY_EVENT', 'Evento de Segurança')], max_length=50, verbose_name='Tipo de Evento')),
                ('severity', models.CharField(choices=[('LOW', 'Baixa'), ('MEDIUM', 'Média'), ('HIGH', 'Alta'), ('CRITICAL', 'Crítica')], default='MEDIUM', max_length=20, verbose_name='Severidade')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(verbose_name='Descrição')),
                ('details', models.JSONField(blank=True, default=dict, verbose_name='Detalhes')),
                ('old_values', models.JSONField(blank=True, default=dict, verbose_name='Valores Anteriores')),
                ('new_values', models.JSONField(blank=True, default=dict, verbose_name='Novos Valores')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data/Hora')),
                ('module', models.CharField(blank=True, max_length=100, null=True, verbose_name='Módulo')),
                ('action', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ação')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Log de Auditoria',
                'verbose_name_plural': 'Logs de Auditoria',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DataChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('field_name', models.CharField(max_length=100, verbose_name='Campo')),
                ('old_value', models.TextField(blank=True, null=True, verbose_name='Valor Anterior')),
                ('new_value', models.TextField(blank=True, null=True, verbose_name='Novo Valor')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data/Hora')),
                ('audit_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_changes', to='audit.auditlog', verbose_name='Log de Auditoria')),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Alterado por')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Histórico de Mudança de Dados',
                'verbose_name_plural': 'Histórico de Mudanças de Dados',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('FAILED_LOGIN', 'Tentativa de Login Falhou'), ('BRUTE_FORCE', 'Tentativa de Força Bruta'), ('SUSPICIOUS_ACTIVITY', 'Atividade Suspeita'), ('UNAUTHORIZED_ACCESS', 'Acesso não Autorizado'), ('DATA_BREACH_ATTEMPT', 'Tentativa de Violação de Dados'), ('SQL_INJECTION', 'Tentativa de SQL Injection'), ('XSS_ATTEMPT', 'Tentativa de XSS'), ('CSRF_ATTACK', 'Ataque CSRF'), ('RATE_LIMIT_EXCEEDED', 'Limite de Taxa Excedido'), ('IP_BLOCKED', 'IP Bloqueado')], max_length=50)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evento de Segurança',
                'verbose_name_plural': 'Eventos de Segurança',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['timestamp'], name='audit_audit_timesta_19e18a_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user'], name='audit_audit_user_id_292c79_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['event_type'], name='audit_audit_event_t_4496ba_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['severity'], name='audit_audit_severit_f33e16_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['content_type', 'object_id'], name='audit_audit_content_4c2ead_idx'),
        ),
    ]
