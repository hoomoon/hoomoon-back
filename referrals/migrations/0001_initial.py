# Generated by Django 5.2.1 on 2025-06-10 22:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReferralProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('name', models.CharField(max_length=100, verbose_name='Nome do Programa')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('commission_rate', models.DecimalField(decimal_places=2, help_text='Percentual de comissão (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Taxa de Comissão (%)')),
                ('max_levels', models.PositiveIntegerField(default=1, help_text='Quantos níveis de referência são permitidos', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Níveis Máximos')),
                ('level_commissions', models.JSONField(blank=True, default=dict, help_text="Comissões específicas por nível {'1': 10.00, '2': 5.00}", verbose_name='Comissões por Nível')),
                ('min_payout', models.DecimalField(decimal_places=2, default=Decimal('10.00'), help_text='Valor mínimo para saque', max_digits=10, verbose_name='Saque Mínimo')),
                ('max_monthly_earnings', models.DecimalField(blank=True, decimal_places=2, help_text='Limite máximo de ganhos mensais (opcional)', max_digits=12, null=True, verbose_name='Limite Mensal')),
                ('start_date', models.DateTimeField(verbose_name='Data de Início')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Término')),
                ('is_default', models.BooleanField(default=False, verbose_name='Programa Padrão')),
                ('auto_approve', models.BooleanField(default=True, verbose_name='Aprovação Automática')),
            ],
            options={
                'verbose_name': 'Programa de Indicação',
                'verbose_name_plural': 'Programas de Indicação',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Código de Indicação')),
                ('uuid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='UUID')),
                ('clicks', models.PositiveIntegerField(default=0, verbose_name='Cliques')),
                ('conversions', models.PositiveIntegerField(default=0, verbose_name='Conversões')),
                ('total_earnings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Ganhos Totais')),
                ('custom_landing_page', models.URLField(blank=True, verbose_name='Página de Destino Personalizada')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_links', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_links', to='referrals.referralprogram', verbose_name='Programa')),
            ],
            options={
                'verbose_name': 'Link de Indicação',
                'verbose_name_plural': 'Links de Indicação',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'program')},
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('referral_status', models.CharField(choices=[('PENDING', 'Pendente'), ('ACTIVE', 'Ativo'), ('COMPLETED', 'Completado'), ('CANCELLED', 'Cancelado')], default='PENDING', max_length=20, verbose_name='Status da Indicação')),
                ('level', models.PositiveIntegerField(default=1, help_text='Nível da indicação (1 = direto, 2 = indireto, etc.)', verbose_name='Nível')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('referrer_url', models.URLField(blank=True, verbose_name='URL de Origem')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Clicou em')),
                ('registered_at', models.DateTimeField(blank=True, null=True, verbose_name='Registrou em')),
                ('first_purchase_at', models.DateTimeField(blank=True, null=True, verbose_name='Primeira Compra em')),
                ('referred', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_from', to=settings.AUTH_USER_MODEL, verbose_name='Indicado')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to=settings.AUTH_USER_MODEL, verbose_name='Indicador')),
                ('referral_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='referrals.referrallink', verbose_name='Link Usado')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='referrals.referralprogram', verbose_name='Programa')),
            ],
            options={
                'verbose_name': 'Indicação',
                'verbose_name_plural': 'Indicações',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=20, verbose_name='Status')),
                ('source_type', models.CharField(choices=[('DEPOSIT', 'Depósito'), ('INVESTMENT', 'Investimento'), ('EARNING', 'Rendimento'), ('SIGNUP_BONUS', 'Bônus de Cadastro'), ('MILESTONE', 'Marco Alcançado')], max_length=20, verbose_name='Tipo de Origem')),
                ('source_id', models.PositiveIntegerField(blank=True, help_text='ID do objeto que gerou o ganho', null=True, verbose_name='ID da Origem')),
                ('original_amount', models.DecimalField(decimal_places=2, help_text='Valor original que gerou a comissão', max_digits=12, verbose_name='Valor Original')),
                ('commission_rate', models.DecimalField(decimal_places=2, help_text='Taxa de comissão aplicada', max_digits=5, verbose_name='Taxa de Comissão (%)')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Valor da Comissão')),
                ('earning_status', models.CharField(choices=[('PENDING', 'Pendente'), ('APPROVED', 'Aprovado'), ('PAID', 'Pago'), ('CANCELLED', 'Cancelado')], default='PENDING', max_length=20, verbose_name='Status do Ganho')),
                ('earned_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Ganho em')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Aprovado em')),
                ('paid_at', models.DateTimeField(blank=True, null=True, verbose_name='Pago em')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('admin_notes', models.TextField(blank=True, verbose_name='Notas do Admin')),
                ('referral', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='referrals.referral', verbose_name='Indicação')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referral_earnings', to=settings.AUTH_USER_MODEL, verbose_name='Indicador')),
            ],
            options={
                'verbose_name': 'Ganho por Indicação',
                'verbose_name_plural': 'Ganhos por Indicação',
                'ordering': ['-earned_at'],
                'indexes': [models.Index(fields=['referrer', 'earning_status'], name='referrals_r_referre_f29cc0_idx'), models.Index(fields=['source_type', 'source_id'], name='referrals_r_source__5c86ce_idx'), models.Index(fields=['earned_at'], name='referrals_r_earned__19d7e0_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['referrer', 'referral_status'], name='referrals_r_referre_e992ea_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['referred', 'referral_status'], name='referrals_r_referre_5c5986_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['program', 'level'], name='referrals_r_program_153df9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referral',
            unique_together={('referrer', 'referred')},
        ),
    ]
